name: Unity CI

on:
  push:
    branches: [ devops ]
  pull_request:
    branches: [ master ]

jobs:
  setupUnity:
    runs-on: ubuntu-latest
    container: gableroux/unity3d:2019.3.6f1
    steps:
        - name: Checkout Project
          uses: actions/checkout@v1
          with:
            lfs: true

        - name: Decrypt the license file
          run: openssl aes-256-cbc -d -in .github/Unity_v2019.x.ulf.enc -k ${{ secrets.UNITY_LICENSE_DECRYPT_KEY }} >> .github/Unity_v2019.x.ulf
        
        # Activate unity
        - name: Activate Unity
          run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .github/Unity_v2019.x.ulf || exit 0
            
  requestManualActivationFile:
    name: Request manual activation file üîë
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.3.6f1
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: webbertakken/unity-request-manual-activation-file@v1.1
        id: getManualLicenseFile
        with:
          unityVersion: 2019.3.6f1

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v1
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    name: Request activation ‚úî
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2

  activateAndThenReturnLicense:
    name: returnLicense üéà
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2
      - uses: webbertakken/unity-return-license@v1
            
  testRunnerInEditMode:
    name: Test in editmode üìù
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: test-project/Library
          key: Library-test-project-StandaloneLinux64
          restore-keys: |
            Library-test-project-
            Library-
      
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          projectPath: test-project
          unityVersion: 2019.3.6f1
  
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          projectPath: test-project
          testMode: editmode

      # Upload artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
        
  buildApk:
    runs-on: ubuntu-latest
    container: gableroux/unity3d:2019.3.6f1
    steps:
        # Build Windows and OSX
        - name: Build Windows Player
          run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -buildWindows64Player ./bin-win64/CISample.exe
        - name: Build OSX Player
          run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -buildOSXUniversalPlayer ./bin-osx/CISample.app      
        
        - name: Archive Windows Build
          uses: actions/upload-artifact@v1
          with:
            name: CISampleWin64Binary
            path: ./bin-win64

        - name: Archive Mac Build
          uses: actions/upload-artifact@v1
          with:
            name: CISampleOSXBinary
            path: ./bin-osx
